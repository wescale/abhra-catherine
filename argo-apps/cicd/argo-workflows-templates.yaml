apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: workflow-template-kaniko
  namespace: cd-tools
  annotations:
    argocd.argoproj.io/sync-wave: "300"
spec:
  templates:
    - name: kaniko-build-template
      volumes:
        - name: kaniko-secret
          secret:
            secretName: registry-secret
            items:
              - key: .dockerconfigjson
                path: config.json
      inputs:
        parameters:
          - name: project
      container:
        image: gcr.io/kaniko-project/executor:debug
        command: [/bin/sh]
        args: 
          - "-c"
          - >-
            /kaniko/executor
            {{workflow.parameters.gitlabcontext}} 
            --context-sub-path=src/{{inputs.parameters.project}}
            --dockerfile=Dockerfile 
            --verbosity=trace
            --destination=rg.fr-par.scw.cloud/guru/{{inputs.parameters.project}}:{{workflow.parameters.commitId}} 
        volumeMounts:
          - name: kaniko-secret
            mountPath: /kaniko/.docker/
        env:
          - name: GIT_USERNAME 
            valueFrom:
              secretKeyRef:
                name: gitlab-guru
                key: username
          - name: GIT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: gitlab-guru
                key: token
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
    - name: trivy-scan-template
      volumes:
        - name: kaniko-secret
          secret:
            secretName: registry-secret
            items:
              - key: .dockerconfigjson
                path: config.json
      inputs:
        parameters:
          - name: project
      container:
        image: aquasec/trivy:0.38.3
        command: [/bin/sh]
        args: 
          - "-c"
          - >-
            apk add curl &&
            /usr/local/bin/trivy image -o sbom.json -f cyclonedx rg.fr-par.scw.cloud/guru/{{inputs.parameters.project}}:{{workflow.parameters.commitId}} &&
            curl -X "POST" "https://dependency.abhra.shambhala.cloud/api/v1/bom" -H 'Content-Type: multipart/form-data' -H 'X-API-Key: 27BqM7ILJXAzhatndIYiRVwGAiB3T1IS' -F "autoCreate=true" -F "projectName={{inputs.parameters.project}}" -F "projectVersion={{workflow.parameters.commitId}}" -F "bom=@sbom.json"
        env:
          - name: TRIVY_USERNAME 
            valueFrom:
              secretKeyRef:
                name: scaleway-registry-secret
                key: username
          - name: TRIVY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: scaleway-registry-secret
                key: password
    - name: filter-git-projects-template
      inputs:
          parameters:
            - name: filter-prefix
      script:
        image: python:alpine3.6
        command: [python]
        source: |
          import json, sys

          projects = []

          for commit in {{workflow.parameters.commits}}:
            for key in ["added", "modified", "removed"]:
              for line in commit.get(key):
                if line.startswith("{{inputs.parameters.filter-prefix}}/"):
                  projects.append(line.split("/", 2)[1])

          projects = list(dict.fromkeys(projects))
          json.dump(projects, sys.stdout)
    - name: helm-package-template
      inputs:
          parameters:
            - name: project
      container:
        image: alpine/helm
        command: [/bin/sh]
        args: 
          - "-c"
          - >-
            apk add curl && 
            git clone {{workflow.parameters.gitlaburl}} &&
            helm package guru/charts/{{inputs.parameters.project}} &&
            TGZ_FILE=$(helm package guru/charts/{{inputs.parameters.project}} | cut -d ":" -f 2 | tr -d " ") &&
            curl --request POST --form 'chart=@'$TGZ_FILE'' --user $GIT_USERNAME:$GIT_PASSWORD https://gitlab.com/api/v4/projects/abhra-shambhala%2Fguru/packages/helm/api/stable/charts
        env:
          - name: GIT_USERNAME 
            valueFrom:
              secretKeyRef:
                name: gitlab-guru
                key: username
          - name: GIT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: gitlab-guru
                key: token
